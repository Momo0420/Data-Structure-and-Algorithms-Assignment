/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package bloodtestscheduler;
import bloodtestscheduler.Person;
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author EmoshiogweOmokhudu
 */
public class BloodTestGUI extends javax.swing.JFrame {
    
    private BloodTestQueue queue = new BloodTestQueue();
    private MissedAppointments missedAppointments = new MissedAppointments();

    /**
     * Creates new form BloodTestGUI
     */
    public BloodTestGUI() {
        initComponents();
  
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TFName = new javax.swing.JTextField();
        TFAge = new javax.swing.JTextField();
        CBPriority = new javax.swing.JComboBox<>();
        TFGPDetails = new javax.swing.JTextField();
        CBFromHospital = new javax.swing.JCheckBox();
        BtnViewAppointments = new javax.swing.JButton();
        BtnAddPatients = new javax.swing.JButton();
        BtnProcessNext = new javax.swing.JButton();
        BtnCountUrgentPatients = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TATextBox = new javax.swing.JTextArea();
        SBScrollBar = new javax.swing.JScrollBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Blood Test ");

        jLabel2.setText("Name");

        jLabel3.setText("Age");

        jLabel4.setText("Priority");

        jLabel5.setText("GP Details");

        TFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFNameActionPerformed(evt);
            }
        });

        TFAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFAgeActionPerformed(evt);
            }
        });

        CBPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Urgent", "Medium", "Low" }));
        CBPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBPriorityActionPerformed(evt);
            }
        });

        TFGPDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TFGPDetailsActionPerformed(evt);
            }
        });

        CBFromHospital.setText("From Hospital");
        CBFromHospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBFromHospitalActionPerformed(evt);
            }
        });

        BtnViewAppointments.setText("View Missed Apppointments");
        BtnViewAppointments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewAppointmentsActionPerformed(evt);
            }
        });

        BtnAddPatients.setText("Add Patient");
        BtnAddPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddPatientsActionPerformed(evt);
            }
        });

        BtnProcessNext.setText("Process Next");
        BtnProcessNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnProcessNextActionPerformed(evt);
            }
        });

        BtnCountUrgentPatients.setText("Count Urgent Patients");
        BtnCountUrgentPatients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCountUrgentPatientsActionPerformed(evt);
            }
        });

        TATextBox.setColumns(20);
        TATextBox.setRows(5);
        jScrollPane1.setViewportView(TATextBox);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 428, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TFGPDetails)
                    .addComponent(TFName)
                    .addComponent(TFAge)
                    .addComponent(CBPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(246, 246, 246))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(BtnAddPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(243, 243, 243)
                                .addComponent(jLabel1))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(BtnProcessNext)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SBScrollBar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BtnCountUrgentPatients))))
                        .addGap(37, 37, 37)
                        .addComponent(BtnViewAppointments))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(CBFromHospital)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(594, 594, 594))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(TFName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TFAge, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(CBPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(TFGPDetails, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CBFromHospital)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SBScrollBar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnAddPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnProcessNext, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnCountUrgentPatients, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BtnViewAppointments, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFNameActionPerformed
        // TODO add your handling code here:
       TFNameActionPerformed(evt);
        
    }//GEN-LAST:event_TFNameActionPerformed

    private void TFAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFAgeActionPerformed
        // TODO add your handling code here:
        TFAgeActionPerformed(evt);
    }//GEN-LAST:event_TFAgeActionPerformed

    private void CBPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBPriorityActionPerformed
        // TODO add your handling code here:
       String selectedPriority = (String) CBPriority.getSelectedItem();
       System.out.println("Selected Priority:" +selectedPriority);
        
    }//GEN-LAST:event_CBPriorityActionPerformed

    private void TFGPDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TFGPDetailsActionPerformed
        // TODO add your handling code here:
        TFGPDetailsActionPerformed(evt);
    }//GEN-LAST:event_TFGPDetailsActionPerformed

    private void CBFromHospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBFromHospitalActionPerformed
        // TODO add your handling code here:
        CBFromHospitalActionPerformed(evt);
    }//GEN-LAST:event_CBFromHospitalActionPerformed

    private void BtnProcessNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnProcessNextActionPerformed
        // TODO add your handling code here:
        if (!queue.isEmpty()){
            Person next = (Person) queue.getNextPatient();
            TATextBox.append("Processing:" +next.getName()+ "\n");
            
           }else{
            TATextBox.append("No patients in the queue.\n");
            

            
        }
        
    }//GEN-LAST:event_BtnProcessNextActionPerformed

    private void BtnViewAppointmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewAppointmentsActionPerformed
        // TODO add your handling code here:
       String missed = missedAppointments.displayMissedAppointments();
if (missed != null && !missed.isEmpty()) {
    TATextBox.append("Missed Appointments:\n" + missed + "\n");
} else {
    TATextBox.append("No missed appointments.\n");
}
    }//GEN-LAST:event_BtnViewAppointmentsActionPerformed

    private void BtnAddPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddPatientsActionPerformed
        // TODO add your handling code here:
        String name = TFName.getText();
        int age;

        try {
            age = Integer.parseInt(TFAge.getText());
        } catch (NumberFormatException ex) {
            TATextBox.append("Error: Age must be a number!\n");
            return;
        }

        String priority = (String) CBPriority.getSelectedItem();
        String gpDetails = TFGPDetails.getText();
        boolean fromHospital = CBFromHospital.isSelected();

        Person newPerson = new Person(name, age, priority, gpDetails, fromHospital);
        queue.addPerson(newPerson);
        TATextBox.append("Added Patient: " + newPerson.toString() + "\n");

        TFName.setText("");
        TFAge.setText("");
        TFGPDetails.setText("");
        CBPriority.setSelectedIndex(0);
        CBFromHospital.setSelected(false);
        
    }//GEN-LAST:event_BtnAddPatientsActionPerformed

    private void BtnCountUrgentPatientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCountUrgentPatientsActionPerformed
        // TODO add your handling code here:
       
        int urgentCount = Recursion.countUrgentPatients(queue.getAllPatients(), 0);
        TATextBox.append("Urgent Patients Count:" +urgentCount+ "\n");
    }//GEN-LAST:event_BtnCountUrgentPatientsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        System.out.println("Starting BloodTestGUI");
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BloodTestGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BloodTestGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAddPatients;
    private javax.swing.JButton BtnCountUrgentPatients;
    private javax.swing.JButton BtnProcessNext;
    private javax.swing.JButton BtnViewAppointments;
    private javax.swing.JCheckBox CBFromHospital;
    private javax.swing.JComboBox<String> CBPriority;
    private javax.swing.JScrollBar SBScrollBar;
    private javax.swing.JTextArea TATextBox;
    private javax.swing.JTextField TFAge;
    private javax.swing.JTextField TFGPDetails;
    private javax.swing.JTextField TFName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
